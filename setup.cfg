[metadata]
name = wallcrop
project_urls =
    Repository = https://github.com/lschmelzeisen/wallcrop
    Issue Tracker = https://github.com/lschmelzeisen/wallcrop/issues
author = Lukas Schmelzeisen
author_email = me@lschmelzeisen.com
classifiers =
    Development Status :: 1 - Planning
    Intended Audience :: End Users/Desktop
    License :: OSI Approved :: Apache Software License
    Natural Language :: English
    Operating System :: OS Independent
    Programming Language :: Python
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3 :: Only
    Programming Language :: Python :: Implementation :: PyPy
    Topic :: Artistic Software
    Topic :: Multimedia
    Topic :: Multimedia :: Graphics
    Topic :: Multimedia :: Graphics :: Editors
    Topic :: Multimedia :: Graphics :: Editors :: Raster-Based
    Topic :: Multimedia :: Graphics :: Graphics Conversion
    Typing :: Typed
license = Apache License, Version 2.0
license_file = LICENSE
description = Multi-monitor wallpaper cropping tool.
long_description = file: README.rst
long_description_content_type = text/x-rst
platforms = any
keywords =
    python
    wallpaper
    background
    crop
    cropping
    multi-monitor
    multi-display
    multihead

[options]
zip_safe = True
setup_requires =
    setuptools_scm[toml]~=5.0
install_requires =
    nasty-utils~=0.1
    numpy~=1.20
    overrides~=3.1
    Pillow~=8.1
    typing-extensions~=3.7
python_requires = >=3.7
include_package_data = True
package_dir =
    =src
packages = find:

[options.extras_require]
test =
    coverage[toml]~=5.4
    pytest~=6.2
    pytest-cov~=2.11
    pytest-html~=3.1
dev =
    autoflake~=1.4
    black==20.8b1
    flake8~=3.8
    flake8-bandit~=2.1
    flake8-bugbear~=20.11
    flake8-builtins~=1.5
    flake8-comprehensions~=3.3
    flake8-eradicate~=1.0
    flake8-print~=4.0
    flake8-pyi~=20.10
    isort~=5.7
    licenseheaders==0.8.5
    mypy~=0.800
    nasty-typeshed~=0.1
    nox~=2020.12
    pep8-naming~=0.11
    twine~=3.3
    vulture~=2.3

[options.entry_points]
console_scripts =
    wallcrop = wallcrop.__main__:main

[options.packages.find]
where = src

[flake8]
# required for Black compatibility
max-line-length = 88
# flake8-mccabe
max-complexity = 10
select =
    # pycodestyle / flake8-eradicate
    E
    W
    # flake8
    F
    # flake8-mccabe / flake8-comprehensions
    C
    # flake8-builtins
    A
    # flake8-bugbear / flake8-bandit
    B
    # flake8-pyi
    Y
    # flake8-print
    T
    # pep8-naming
    N
ignore =
    # required for Black compatibility
    E203
    W503
    # disable class-attributes overlapping with builtins
    A003
per-file-ignores =
    # Allow vulture's whitelist syntax and overlong lines
    vulture-whitelist.py:F821,E501

[mypy]
mypy_path = ./src
python_version = 3.7
platform = linux
plugins = pydantic.mypy
pretty = True

; -- Disallow dynamic typing ---------------------------------------------------
disallow_any_unimported = True
; Sadly, I don't know how to type decorators when enabling the next three.
;disallow_any_expr = True
;disallow_any_decorated = True
;disallow_any_explicit = True
disallow_any_generics = True
disallow_subclassing_any = True

; -- Untyped definitions and calls ---------------------------------------------
disallow_untyped_calls = True
disallow_untyped_defs = True
disallow_incomplete_defs = True
check_untyped_defs = True
disallow_untyped_decorators = True

; -- None and Optional handling ------------------------------------------------
no_implicit_optional = True
strict_optional = True

; -- Configuring warnings ------------------------------------------------------
warn_redundant_casts = True
warn_unused_ignores = True
warn_no_return = True
warn_return_any = True
warn_unreachable = True

; -- Miscellaneous strictness flags --------------------------------------------
allow_redefinition = True
implicit_reexport = False
strict_equality = True

; -- Miscellaneous -------------------------------------------------------------
error_summary = False
warn_unused_configs = True

; __init__.py's import of _version.py contains type ignore comment should file
; not exist. If the file does exist it is detected as unused ignore comment.
[mypy-wallcrop]
warn_unused_ignores = False

; Ignore vulture's generated whitelist
[mypy-vulture-whitelist]
ignore_errors = True

[pydantic-mypy]
init_forbid_extra = True
init_typed = True
warn_required_dynamic_aliases = True
warn_untyped_fields = True
